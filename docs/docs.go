// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/activity": {
            "post": {
                "description": "Create a new activity with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Create a new activity",
                "parameters": [
                    {
                        "description": "Activity object to be created",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Activity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created activity",
                        "schema": {
                            "$ref": "#/definitions/main.Activity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/csv/today": {
            "get": {
                "description": "Get all activities recorded today in CSV format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get today's activities",
                "responses": {
                    "200": {
                        "description": "List of today's activities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Activity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No activities found for today",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/csv/{date}": {
            "get": {
                "description": "Get all activities recorded on a specific date in CSV format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get activities by date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date in YYYYMMDD format",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of activities for the specified date",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Activity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No activities found for the specified date",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/recategorize/{id}": {
            "patch": {
                "description": "Recategorize an existing activity by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Recategorize an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully recategorized activity",
                        "schema": {
                            "$ref": "#/definitions/main.Activity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/tempo/{date}/{id}": {
            "post": {
                "description": "Post an activity to Jira/Tempo by its date and ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Post activity to Jira/Tempo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date in YYYYMMDD format",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully posted to Jira/Tempo",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/{date}/{id}": {
            "get": {
                "description": "Get a specific activity by its date and ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get activity by date and ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date in YYYYMMDD format",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity details",
                        "schema": {
                            "$ref": "#/definitions/main.Activity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity/{id}": {
            "get": {
                "description": "Get a specific activity by its ID (from today's activities)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get activity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity details",
                        "schema": {
                            "$ref": "#/definitions/main.Activity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Activity not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Activity": {
            "type": "object",
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "categorization_distance": {
                    "type": "number"
                },
                "categorization_grade": {
                    "type": "string"
                },
                "categorized": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "input_description": {
                    "type": "string"
                },
                "jira": {
                    "type": "string"
                },
                "posted_to_jira_tempo": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "rule_description": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "weaviate_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "AIdea Activity Tracker API",
	Description:      "API for tracking and managing activities",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
